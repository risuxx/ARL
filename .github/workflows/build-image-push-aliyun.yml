# .github/workflows/build-arl.yml
name: Build ARL Docker Image

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t risuxx/arl:latest .

      - name: Test Docker image
        run: |
          docker run --name arl-test -d -p 5003:5003 arl:latest
          sleep 30
          curl http://localhost:5003 || exit 1
          docker stop arl-test
          docker rm arl-test

      - name: Pack image file
        run: |
          docker save -o arl.tar risuxx/arl:latest

      - name: Push to Aliyun ECS
        env:
          PRIVATE_KEY: ${{ secrets.ALIYUN_ECS_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.ALIYUN_ECS_HOST }}
          USER: ${{ secrets.ALIYUN_ECS_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -i private_key -o StrictHostKeyChecking=no arl.tar $USER@$HOST:~
          ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST "docker load -i arl.tar"
          rm -f private_key

      - name: Run ARL image on Aliyun ECS
        env:
          PRIVATE_KEY: ${{ secrets.ALIYUN_ECS_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.ALIYUN_ECS_HOST }}
          USER: ${{ secrets.ALIYUN_ECS_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST "
            if docker ps -a | grep -q arl; then
              docker stop arl
              docker rm arl
            fi
            docker run -d -p 5003:5003 -v /root/arl:/data/db --name arl --restart always risuxx/arl:latest
          "
          rm -f private_key

