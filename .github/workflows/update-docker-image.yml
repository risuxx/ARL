name: Update code from arl directory base on adysec/arl

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # build:
  #   runs-on: self-hosted

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  #     - name: Clean arl container
  #       run: |
  #         docker stop arl | true
  #         docker rm arl | true
  #     - name: Update code file and build docker image
  #       run: |
  #         docker build --platform=linux/amd64 -t risuxx/arl:latest -f UpdateDockerfile .
  #     - name: Save docker image
  #       run: |
  #         docker save -o arl.tar risuxx/arl:latest
  deploy:
    runs-on: self-hosted
    # needs: build
    
    steps:
      - name: Push to Aliyun ECS
        run: |
          # scp -o StrictHostKeyChecking=no arl.tar aliyun:/root/
          ssh -o StrictHostKeyChecking=no aliyun "docker stop arl || true"
          ssh -o StrictHostKeyChecking=no aliyun "docker rm arl || true"
          ssh -o StrictHostKeyChecking=no aliyun "docker load -i arl.tar"
          ssh -o StrictHostKeyChecking=no aliyun "docker run --privileged -it -d -p 5003:5003 --name=arl --restart=always risuxx/arl:latest /usr/sbin/init"
          ssh -o StrictHostKeyChecking=no aliyun "docker exec arl bash -c 'rabbitmqctl start_app'"
          sleep 30
          ssh -o StrictHostKeyChecking=no aliyun "docker exec arl bash -c 'rabbitmqctl add_user arl arlpassword'"
          ssh -o StrictHostKeyChecking=no aliyun "docker exec arl bash -c 'rabbitmqctl add_vhost arlv2host'"
          ssh -o StrictHostKeyChecking=no aliyun "docker exec arl bash -c 'rabbitmqctl set_user_tags arl arltag'"
          ssh -o StrictHostKeyChecking=no aliyun "docker exec arl bash -c 'rabbitmqctl set_permissions -p arlv2host arl ".*" ".*" ".*"'"
          ssh -o StrictHostKeyChecking=no aliyun "docker exec arl bash -c 'cd /etc/systemd/system && systemctl restart arl*'"
          
          
